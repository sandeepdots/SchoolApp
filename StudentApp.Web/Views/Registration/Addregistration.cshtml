@model SchoolApp.Web.Model.RegistrationViewModel

@{
    ViewBag.Title = "Addregistration";
    Layout = "~/Views/Shared/_RegisterMaster.cshtml";
}
<script src="~/Scripts/jquery.min.js"></script>

<div class="container">
    <section class="content-header">
        <div class="container">
            <div class="col-sm-12 offset-5">
                <h1> Registration</h1>
            </div>


        </div>
    </section>

</div>

<div class="container">
    <div class="row">
        <div class="col-sm-12" >
            @Html.Partial("_MessageNotification")
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6  pb-lg-5">
            <div class="card card-primary ">
                <div class="card-header">
                    <h3 class="card-title">User Registration</h3>


                </div>
                <form id="quickForm" method="post">
                    <div class="card-body">
                        <div class="form-group">
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.UserId)
                                <div class="form-group">

                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "Password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @type = "Password" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Retypepassword, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Retypepassword, new { htmlAttributes = new { @class = "form-control", @type = "Password" } })
                                        @Html.ValidationMessageFor(model => model.Retypepassword, "", new { @class = "text-danger", @type = "Password" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(x => x.RoleId, Model.RoleList, "select", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })


                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer">

                        <button type="submit" class="btn btn-primary" id="submitbutton">Submit</button>

                        @Html.ActionLink("Login", "Index", "Login", new { @class = "btn btn-primary" })

                    </div>
                    <script type="text/javascript" src="~/Scripts/jquery.min.js"></script>

                </form>

            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>











